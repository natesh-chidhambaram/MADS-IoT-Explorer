name: Elixir CI

on:
  push: {branches: master}
  pull_request: {branches: master}
  repository_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.1-slim
      env:
        MIX_ENV: test
        ELASTIC_SEARCH_HOST: "http://elastic_search:9200"
        REDIS_PORT: "redis://redis:6379"

    services: 
      db:
        image: timescale/timescaledb:latest-pg11
        ports: 
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options:  --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elastic_search:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
        env: 
          discovery.type: single-node
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports: 
          - 9200:9200
        options: >-
          --health-cmd "curl --silent --fail localhost:9200/_cluster/health || exit 1" 
          --health-interval 5s
          --health-retries 12
          --health-timeout 2s
      redis:
        image: redis
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mqtt_broker:
        image: vernemq/vernemq:latest-alpine
        ports: 
          - 1883:1883
        env:
          DOCKER_VERNEMQ_ALLOW_ANONYMOUS: 'on'
          DOCKER_VERNEMQ_ACCEPT_EULA: 'yes'
        # Set health checks to wait until broker has started
        options: >-
          --health-cmd "vernemq ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Add Build essential
      run: apt-get update && apt-get install -y git && apt-get install -y make && apt-get -y install build-essential && apt-get install -y curl
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Check code formatting
      run: mix format --check-formatted
    - name: Run tests (with coverage)
      run:  mix coveralls.json --umbrella
      env:
        DB_HOST: db
        ELASTIC_SEARCH_HOST: http://elastic_search:9200
        REDIS_PORT: redis://redis:6379/3
        MQTT_HOST: mqtt_broker
        MQTT_PORT: 1883
    - name: Report coverage to Codecov
      uses: codecov/codecov-action@v1 
      with: 
        file: ./cover/excoveralls.json
